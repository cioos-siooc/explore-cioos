services:
  db:
    image: "postgis/postgis:13-3.1-alpine"
    platform: linux/x86_64
    ports:
      - "${DB_PORT:-5432}:${DB_PORT:-5432}"
    environment:
      - "PGPORT=${DB_PORT:-5432}"
      - "POSTGRES_DB=$DB_NAME"
      - "POSTGRES_PASSWORD=$DB_PASSWORD"
      - "POSTGRES_USER=$DB_USER"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  web-api:
    build: ./web-api
    restart: always
    env_file:
      - .env
    expose:
      - "5000"
    depends_on:
      - db
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web-api
    ports:
      - "$NGINX_PORT:4000"
  scheduler:
    build:
      context: .
      dockerfile: ./download_scheduler/Dockerfile
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - $DOWNLOADS_FOLDER:/usr/src/app/downloads
  frontend:
    build:
      context: ./frontend
      args:
        API_URL: $API_URL
        BASE_URL: $BASE_URL
    expose:
      - "80"
    # depends_on:
    #   - web-api

  harvester:
    build:
      context: .
      dockerfile: ./harvester/Dockerfile
    profiles:
      - tools
    volumes:
      - ./harvest_config.yaml:/usr/src/app/harvest_config.yaml
      - ./harvester_cache:/usr/src/app/harvester_cache
      - ./harvest:/usr/src/app/harvest
    env_file:
      - .env

volumes:
  postgres-data:
